// Generated by CoffeeScript 1.3.3
(function() {
  var EventEmitter, Sonar, five, util, _, __,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  five = require('johnny-five');

  __ = require('johnny-five/lib/fn.js');

  _ = require('underscore');

  util = require('util');

  Sonar = (function(_super) {

    __extends(Sonar, _super);

    Sonar.prototype.history = [];

    Sonar.prototype.sweep = [];

    function Sonar(opts) {
      var pins,
        _this = this;
      if (opts == null) {
        opts = {};
      }
      pins = opts.pins || [12, 4];
      this.scanner = new five.Servo(pins[0]);
      this.ping = new five.Ping(pins[1]);
      this.steps = opts.steps || 20;
      this.min = opts.min || 10;
      this.ping.on('read', function() {
        if (_this.ping.inches < _this.min) {
          return _this.emit('warning');
        }
      });
      this.scanner.on('move', function() {
        if (_this.isScanning) {
          return _this.sweep.push({
            degrees: _this.scanner.last ? _this.scanner.last.degrees : 0,
            distance: _this.ping.inches
          });
        }
      });
      this.scanner.on('finished', function() {
        _this.scanner.stop().center();
        _this.history.push(_this.sweep);
        _this.emit('scanned', null);
        return _this.isScanning = false;
      });
    }

    Sonar.prototype.scan = function() {
      this.scanner.step(this.steps);
      return this.isScanning = true;
    };

    return Sonar;

  })(EventEmitter);

}).call(this);
