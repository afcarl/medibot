// Generated by CoffeeScript 1.3.3
(function() {
  var Camera, EventEmitter, compulsive, ffmpeg, five, fs, util, _, __,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  five = require('johnny-five');

  __ = require('johnny-five/lib/fn.js');

  _ = require('underscore');

  util = require('util');

  compulsive = require('compulsive');

  ffmpeg = require('fluent-ffmpeg');

  fs = require('fs');

  EventEmitter = require('events').EventEmitter;

  Camera = (function(_super) {

    __extends(Camera, _super);

    function Camera(opts) {
      if (opts == null) {
        opts = {};
      }
      this.tilt = new five.Servo({
        range: [70, 180],
        pin: 8
      });
      this.pan = new five.Servo({
        pin: 7
      });
      this.stream = fs.createWriteStream('/public/video.mjpeg');
    }

    Camera.prototype.control = function(pos) {
      var servo, _i, _len, _ref, _results;
      _ref = [this.pan, this.tilt];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        servo = _ref[_i];
        _results.push(servo.move((pos[_i] * 90) + 90));
      }
      return _results;
    };

    Camera.prototype.record = function() {
      return this.ffmpeg = new ffmpeg({
        source: '/dev/video0'
      }).addOption('-f', 'video4linxu2').withVideoCodec('mjpeg').withSize('640x480').writeToStream(this.stream, {});
    };

    return Camera;

  })(EventEmitter);

  module.exports = Camera;

}).call(this);
