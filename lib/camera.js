// Generated by CoffeeScript 1.3.3
(function() {
  var Camera, EventEmitter, compulsive, five, util, _, __,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  five = require('johnny-five');

  __ = require('johnny-five/lib/fn.js');

  _ = require('underscore');

  util = require('util');

  compulsive = require('compulsive');

  EventEmitter = require('events').EventEmitter;

  Camera = (function(_super) {

    __extends(Camera, _super);

    function Camera(opts) {
      if (opts == null) {
        opts = {};
      }
      this.tilt = new five.Servo({
        range: [70, 180],
        pin: 8
      });
      this.pan = new five.Servo({
        pin: 7
      });
    }

    Camera.prototype.move = function(pos) {
      var servo, _i, _len, _ref, _results,
        _this = this;
      _ref = [this.pan, this.tilt];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        servo = _ref[_i];
        if ((pos[_i] <= servo.last.degrees - 5) || (pos[_i](function() {
          return servo.last.degrees + 5;
        }))) {
          _results.push(servo.move((pos[_i] * 90) + 90));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return Camera;

  })(EventEmitter);

  module.exports = Camera;

}).call(this);
